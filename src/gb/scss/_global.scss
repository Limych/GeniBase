@charset "UTF-8";

//
Foundation by ZURB // foundation.zurb.com // Licensed under MIT Open Source
	// // Modified for GeniBase
	/////////////////////////////////////////////////////////////////////////////////////////////////
	// @Mixins // // We use this to do clear floats
 @mixin clearfix {
	*zoom: 1; &: after { content : '';
	display: table;
	line-height: 0;
	clear: both;
}

}
//
We use this to add box-sizing across browser prefixes
 @mixin box-sizing ($type:border-box ) {
	-webkit-box-sizing: $type;
	//
	Android
	<
	2.3,
	iOS
	<
	4
	-moz-box-sizing
	:
	$
	type;
	//
	Firefox
	<
	29
	box-sizing
	:
	$
	type;
	//
	Chrome
	,
	IE
	8+,
	Opera,
	Safari
	5.1+
}

//
We use this to control box shadows . // $radius - Default: $global-radius
 @mixin radius ($radius: 0) { @if $radius { -webkit-border-radius: $radius;
	//
	iOS border-radius: $radius;
	//
	Chrome
	,
	IE
	9+,
	Opera
	10.5+,
	Safari
	5.0+,
	Android
	2.1+,
	Firefox
}

}
/////////////////////////////////////////////////////////////////////////////////////////////////
//
@
Functions // // STRIP UNIT // It strips the unit of measure and returns it
 @function strip-unit ($num) { @return $num / ($num * 0 + 1);
	
}

//
CONVERT TO REM
 @function convert-to-rem ($value, $base-value: $rem-base ) { $
	value: strip-unit($ value)/strip-unit($ base-value)* 1rem;
	@
	if
	($value
	==
	0rem)
	{
	$value
	:
	0;
}

//
Turn
 
0
rem
 
into
 
0
@
return
 
$
value
;


}
@
function data ($attr) { @if $namespace { @return '[data-' + $namespace +
	'-' + $attr + ']';
	
}

@
return
 
'
[
data-
'
+
$attr
+
'
]
';


}
//
REM CALC // New Syntax, allows to optionally calculate on a different base value to counter compounding effect of rem
	's. // Call with 1, 2, 3 or 4 parameters, 'px ' is not required but supported:
	// //   rem-calc (10 20 30px 40); // // Space delimited, if you want to delimit using comma
	's, wrap it in another pair of brackets // //   rem-calc ((10, 20, 30,
	40px )); // // Optionally call with a different base (eg: 8px ) to calculate rem
	. // //   rem-calc (16px 32px 48px, 8px ); // // If you require to comma separate your list
	// //   rem-calc ((16px, 32px, 48), 8px );

 @function rem-calc ($values, $base-value: $rem-base ) { $
	max: length($ values);
	@
	if
	$max
	==
	1
	{
	@return
	convert-to-rem(nth($values,
	1),
	$base-value);
}

$
remValues: (); @for $i from 1 through $max { $
	remValues: append($ remValues, convert-to-rem(nth($ values, $ i),$base-value));
}

@
return
 
$
remValues
;


}
//
RANGES // We use these functions to define ranges for various things,
	like media queries .
 @function lower-bound ($range){ @if length($range) <= 0 { @return 0;
	
}

@
return
 
nth
($range
,
1);
}
@
function upper-bound ($range) { @if length($range) < 2 { @return
	999999999999;
	
}

@
return
 
nth
($range
,
2);
}
//
IMPORT ONCE // We use this to prevent styles from being loaded multiple times for components that rely on other components
	.
 $modules: () !default ;
 @mixin export ($name) { // Import from global scope $modules: $modules
	!global; // Check if a module is already on the list $module_index:index(
	$modules, $name); @if (($module_index == null) or ($module_index ==
	false)) { $modules:append( $modules, $name) !global; @content;
	
}

}
/////////////////////////////////////////////////////////////////////////////////////////////////
//
@
Settings //

 $white			: #FFFFFF !default ;
 $ghost			: #FAFAFA !default ;
 $gainsboro		: #DDDDDD !default ;
 $oil			: #333333 !default ;
 $black			: #000000 !default ;
 $yellow			: #FFCC00 !default ;

 $primary-color: #5A9917 ;
 $secondary-color: #EEE ;
 $alert-color: #D63722 ;
 $success-color: #33CC33 ;
 $warning-color: #f08a24 ; // $info-color: #a0d3e8 ; // This is the default html and body font-size for the base rem value
	.
 $rem-base: 16px !default ; // We use these to define default font weights
 $font-weight-normal: normal !default ;
 $font-weight-bold: bold !default ;

 $text-direction: ltr !default ;
 @if $text-direction == ltr { $
	main-direction: left; $
	opposite-direction: right;
}

@
else { $
	main-direction: right; $
	opposite-direction: left;
}

$
column-gutter
:
 
rem-calc
(20)
 
!
default
;
//
 
Media
 
Query
 
Ranges


$
small-range
:
 
(0,
40
em
)
 
!
default
;


$
medium-range
:
 
(40
.063em
,
64
em
)
 
!
default
;


$
large-range
:
 
(64
.063em
,
90
em
)
 
!
default
;


$
xlarge-range
:
 
(90
.063em
,
120
em
)
 
!
default
;


$
xxlarge-range
:
 
(120
.063em
,
99999999
em
)
 
!
default
;




$
screen
:
 
"
only
 
screen
"
 
!
default
;



$
landscape
:
 
"#{$
screen
}
and
 
(
orientation
:
 
landscape
)"
 
!
default
;


$
portrait
:
 
"#{$
screen
}
and
 
(
orientation
:
 
portrait
)"
 
!
default
;



$
small-up
:
 
$
screen
 
!
default
;


$
small-only
:
 
"#{$
screen
}
and
 
(
max-width
:
 
#{
upper-bound
($small-range)
}
)"
!
default
;



$
medium-up
:
 
"#{$
screen
}
and (min-width: #{lower-bound ($medium-range)
	
}

)"
!
default
;


$
medium-only
:
 
"#{$
screen
}
and (min-width: #{lower-bound ($medium-range)
	
}

)
and (max-width: #{upper-bound ($medium-range)
	
}

)"
!
default
;



$
large-up
:
 
"#{$
screen
}
and (min-width: #{lower-bound ($large-range)
	
}

)"
!
default
;


$
large-only
:
 
"#{$
screen
}
and (min-width: #{lower-bound ($large-range)
	
}

)
and (max-width: #{upper-bound ($large-range)
	
}

)"
!
default
;



$
xlarge-up
:
 
"#{$
screen
}
and (min-width: #{lower-bound ($xlarge-range)
	
}

)"
!
default
;


$
xlarge-only
:
 
"#{$
screen
}
and (min-width: #{lower-bound ($xlarge-range)
	
}

)
and (max-width: #{upper-bound ($xlarge-range)
	
}

)"
!
default
;



$
xxlarge-up
:
 
"#{$
screen
}
and (min-width: #{lower-bound ($xxlarge-range)
	
}

)"
!
default
;


$
xxlarge-only
:
 
"#{$
screen
}
and (min-width: #{lower-bound ($xxlarge-range)
	
}

)
and (max-width: #{upper-bound ($xxlarge-range)
	
}

)"
!
default ; // Legacy
 $small: $medium-up ;
 $medium: $medium-up ;
 $large: $large-up ; //We use this as cursors values for enabling the option of having custom cursors in the whole site
	's stylesheet
 $cursor-auto-value: auto !default ;
 $cursor-crosshair-value: crosshair !default ;
 $cursor-default-value: default !default ;
 $cursor-disabled-value: not-allowed !default ;
 $cursor-pointer-value: pointer !default ;
 $cursor-help-value: help !default ;
 $cursor-text-value: text !default ;
	/////////////////////////////////////////////////////////////////////////////////////////////////
	// Main code //

 @include export ("global") {html { @include box-sizing(border-box);
	
}

*, *:before, *:after { @include box-sizing(inherit);
	
}
}