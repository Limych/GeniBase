<?php
namespace GeniBase\Tests;

use GeniBase\Common\GeniBaseClass;
use PHPUnit\Framework\TestCase;

/**
 * Test class for GeniBaseClass.
 * Generated by PHPUnit on 2017-06-30 at 19:26:29.
 */
class GeniBaseClassTest extends TestCase
{
    /**
     * @var GeniBaseClass
     */
    protected $object;

    /**
     * @var string
     */
    protected $xml_content;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new GeniBaseClass();
        $this->xml_content = <<<EOF
<?xml version="1.0" encoding="UTF-8"?>
<xml />
EOF;
    }

    /**
     * @covers GeniBase\Common\GeniBaseClass::toArray
     */
    public function testToArray()
    {
        $expected = [];
        $actual = $this->object->toArray();

        $this->assertEquals($expected, $actual);
    }

    /**
     * @covers GeniBase\Common\GeniBaseClass::toJson
     */
    public function testToJson()
    {
        $expected = '[]';
        $actual = $this->object->toJson();

        $this->assertEquals($expected, $actual);
    }

    //     /**
    //      * @covers GeniBase\Common\GeniBaseClass::initFromReader
    //      */
    //     public function testInitFromReader()
    //     {
    //         $reader = new \XMLReader();
    //         $reader->XML($this->xml_content);
    //         $reader->read();
    //         do {
    //             if ($reader->nodeType == \XMLReader::ELEMENT && ($reader->name === 'xml')) {
    //                 $this->object->initFromReader($reader);
    //             }
    //         } while ($reader->read());
    //         // TODO
    //     }

    /**
     * @covers GeniBase\Common\GeniBaseClass::toXml
     */
    public function testToXml()
    {
        $expected = $this->xml_content;

        $xml = new \XMLWriter();
        $xml->openMemory();
        $xml->setIndent(true);
        $xml->setIndentString('    ');
        $xml->startDocument('1.0', 'UTF-8');
        $this->object->toXml($xml);
        $xml->endDocument();
        $actual = $xml->outputMemory(true);

        $this->assertXmlStringEqualsXmlString($expected, $actual);
    }
}
